<workflow-app name="update broker notifications" xmlns="uri:oozie:workflow:0.5">

    <parameters>
        <property>
            <name>graphInputPath</name>
            <description>the path where the graph is stored</description>
        </property>
        <property>
            <name>outputDir</name>
            <description>the path where the the generated data are stored</description>
        </property>
		<property>
            <name>datasourceIdWhitelist</name>
            <value>-</value>
            <description>a white list (comma separeted, - for empty list) of datasource ids</description>
        </property>
		<property>
            <name>datasourceTypeWhitelist</name>
            <value>-</value>
            <description>a white list (comma separeted, - for empty list) of datasource types</description>
        </property>
		<property>
            <name>datasourceIdBlacklist</name>
            <value>-</value>
            <description>a black list (comma separeted, - for empty list) of datasource ids</description>
        </property>
        <property>
            <name>esEventIndexName</name>
            <description>the elasticsearch index name for events</description>
        </property>
        <property>
            <name>esNotificationsIndexName</name>
            <description>the elasticsearch index name for notifications</description>
        </property>
        <property>
            <name>esIndexHost</name>
            <description>the elasticsearch host</description>
        </property>
        <property>
            <name>esBatchWriteRetryCount</name>
            <value>8</value>
            <description>an ES configuration property</description>
        </property>
		<property>
            <name>esBatchWriteRetryWait</name>
            <value>60s</value>
            <description>an ES configuration property</description>
        </property>
		<property>
            <name>esBatchSizeEntries</name>
            <value>200</value>
            <description>an ES configuration property</description>
        </property>
		<property>
            <name>esNodesWanOnly</name>
            <value>true</value>
            <description>an ES configuration property</description>
        </property>
        <property>
        	<name>maxIndexedEventsForDsAndTopic</name>
        	<description>the max number of events for each couple (ds/topic)</description>
        </property>
        <property>
        	<name>brokerApiBaseUrl</name>
        	<description>the url of the broker service api</description>
        </property>
        <property>
            <name>sparkDriverMemory</name>
            <description>memory for driver process</description>
        </property>
        <property>
            <name>sparkExecutorMemory</name>
            <description>memory for individual executor</description>
        </property>
        <property>
            <name>sparkExecutorCores</name>
            <description>number of cores used by single executor</description>
        </property>
        <property>
            <name>oozieActionShareLibForSpark2</name>
            <description>oozie action sharelib for spark 2.*</description>
        </property>
        <property>
            <name>spark2ExtraListeners</name>
            <value>com.cloudera.spark.lineage.NavigatorAppListener</value>
            <description>spark 2.* extra listeners classname</description>
        </property>
        <property>
            <name>spark2SqlQueryExecutionListeners</name>
            <value>com.cloudera.spark.lineage.NavigatorQueryListener</value>
            <description>spark 2.* sql query execution listeners classname</description>
        </property>
        <property>
            <name>spark2YarnHistoryServerAddress</name>
            <description>spark 2.* yarn history server address</description>
        </property>
        <property>
            <name>spark2EventLogDir</name>
            <description>spark 2.* event log dir location</description>
        </property>
    </parameters>

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
            <property>
                <name>oozie.action.sharelib.for.spark</name>
                <value>${oozieActionShareLibForSpark2}</value>
            </property>
        </configuration>
    </global>

    <start to="index_notifications"/>

    <kill name="Kill">
        <message>Action failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    
    <action name="index_notifications">
        <spark xmlns="uri:oozie:spark-action:0.2">
            <master>yarn</master>
            <mode>cluster</mode>
            <name>IndexNotificationsOnESJob</name>
            <class>eu.dnetlib.dhp.broker.oa.IndexNotificationsJob</class>
            <jar>dhp-broker-events-${projectVersion}.jar</jar>
            <spark-opts>
                --executor-memory=${sparkExecutorMemory}
                --driver-memory=${sparkDriverMemory}
                --conf spark.extraListeners=${spark2ExtraListeners}
                --conf spark.sql.queryExecutionListeners=${spark2SqlQueryExecutionListeners}
                --conf spark.yarn.historyServer.address=${spark2YarnHistoryServerAddress}
                --conf spark.eventLog.dir=${nameNode}${spark2EventLogDir}
                --conf spark.sql.shuffle.partitions=3840
            </spark-opts>
            <arg>--outputDir</arg><arg>${outputDir}</arg>
            <arg>--index</arg><arg>${esNotificationsIndexName}</arg>
            <arg>--esHost</arg><arg>${esIndexHost}</arg>
            <arg>--esBatchWriteRetryCount</arg><arg>${esBatchWriteRetryCount}</arg>
            <arg>--esBatchWriteRetryWait</arg><arg>${esBatchWriteRetryWait}</arg>
            <arg>--esBatchSizeEntries</arg><arg>${esBatchSizeEntries}</arg>
            <arg>--esNodesWanOnly</arg><arg>${esNodesWanOnly}</arg>
            <arg>--brokerApiBaseUrl</arg><arg>${brokerApiBaseUrl}</arg>
        </spark>
        <ok to="End"/>
        <error to="Kill"/>
    </action>
    
    	
    <end name="End"/>

</workflow-app>