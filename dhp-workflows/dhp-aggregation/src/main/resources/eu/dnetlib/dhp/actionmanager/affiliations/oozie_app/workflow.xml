<workflow-app name="AffroAffiliations" xmlns="uri:oozie:workflow:0.5">
    <parameters>

<!--        <property>-->
<!--            <name>crossrefInputPath</name>-->
<!--            <description>the path where to find the inferred affiliation relations from Crossref</description>-->
<!--        </property>-->
<!--        <property>-->
<!--            <name>pubmedInputPath</name>-->
<!--            <description>the path where to find the inferred affiliation relations from Pubmed</description>-->
<!--        </property>-->
<!--        <property>-->
<!--            <name>openapcInputPath</name>-->
<!--            <description>the path where to find the inferred affiliation relations from OpenAPC</description>-->
<!--        </property>-->
<!--        <property>-->
<!--            <name>dataciteInputPath</name>-->
<!--            <description>the path where to find the inferred affiliation relations from Datacite</description>-->
<!--        </property>-->
<!--        <property>-->
<!--            <name>webCrawlInputPath</name>-->
<!--            <description>the path where to find the inferred affiliation relations from webCrawl</description>-->
<!--        </property>-->
<!--        <property>-->
<!--            <name>outputPath</name>-->
<!--            <description>the path where to store the actionset</description>-->
<!--        </property>-->
        <property>
            <name>sparkDriverMemory</name>
            <description>memory for driver process</description>
        </property>
        <property>
            <name>sparkExecutorMemory</name>
            <description>memory for individual executor</description>
        </property>
        <property>
            <name>sparkExecutorCores</name>
            <description>number of cores used by single executor</description>
        </property>
        <property>
            <name>oozieActionShareLibForSpark2</name>
            <description>oozie action sharelib for spark 2.*</description>
        </property>
        <property>
            <name>spark2ExtraListeners</name>
            <value>com.cloudera.spark.lineage.NavigatorAppListener</value>
            <description>spark 2.* extra listeners classname</description>
        </property>
        <property>
            <name>spark2SqlQueryExecutionListeners</name>
            <value>com.cloudera.spark.lineage.NavigatorQueryListener</value>
            <description>spark 2.* sql query execution listeners classname</description>
        </property>
        <property>
            <name>spark2YarnHistoryServerAddress</name>
            <description>spark 2.* yarn history server address</description>
        </property>
        <property>
            <name>spark2EventLogDir</name>
            <description>spark 2.* event log dir location</description>
        </property>
    </parameters>

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
            <property>
                <name>oozie.action.sharelib.for.spark</name>
                <value>${oozieActionShareLibForSpark2}</value>
            </property>

        </configuration>
    </global>

    <start to="run-affro"/>

    <kill name="Kill">
        <message>Action failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>

    <action name="run-affro">
        <spark xmlns="uri:oozie:spark-action:0.2">

            <master>yarn-cluster</master>
            <mode>cluster</mode>
            <name>Affiliations inference (Affro)</name>
            <jar>affro_spark.py</jar>

            <spark-opts>
                --executor-memory=${sparkExecutorMemory}
                --executor-cores=${sparkExecutorCores}
                --driver-memory=${sparkDriverMemory}
                --conf spark.executor.memoryOverhead=${sparkExecutorMemory}
                --conf spark.sql.shuffle.partitions=${sparkShufflePartitions}
                --conf spark.extraListeners=${spark2ExtraListeners}
                --conf spark.sql.queryExecutionListeners=${spark2SqlQueryExecutionListeners}
                --conf spark.yarn.historyServer.address=${spark2YarnHistoryServerAddress}
                --conf spark.eventLog.dir=${nameNode}${spark2EventLogDir}
                --conf spark.yarn.appMasterEnv.PYSPARK_PYTHON=python3
                --conf spark.executorEnv.PYSPARK_PYTHON=python3
                --py-files ${wfAppPath}/affro_cluster.py,${wfAppPath}/create_input_cluster.py,${wfAppPath}/functions_cluster.py,${wfAppPath}/matching_cluster.py
                --files ${wfAppPath}/dictionaries/dix_acad.json,${wfAppPath}/dictionaries/dix_categ.json,${wfAppPath}/dictionaries/dix_city.json,${wfAppPath}/dictionaries/dix_country.json,${wfAppPath}/dictionaries/dix_mult.json,${wfAppPath}/txt_files/city_names.txt,${wfAppPath}/txt_files/remove_list.txt,${wfAppPath}/txt_files/stop_words.txt,${wfAppPath}/txt_files/university_terms.txt
            </spark-opts>

            <arg>${resultFolder}</arg>

            <file>${wfAppPath}/affro_spark.py#affro_spark.py</file>
        </spark>

        <ok to="End" />
        <error to="Kill" />

    </action>

    <end name="End"/>
</workflow-app>