<workflow-app name="Create EBI Dataset" xmlns="uri:oozie:workflow:0.5">
    <parameters>
        <property>
            <name>sourcePath</name>
            <description>the Working Path</description>
        </property>
        <property>
            <name>workingPath</name>
            <description>the Working Path</description>
        </property>
        <property>
            <name>mdStoreOutputId</name>
            <description>the identifier of the cleaned MDStore</description>
        </property>
        <property>
            <name>mdStoreManagerURI</name>
            <description>the path of the cleaned mdstore</description>
        </property>
        <property>
            <name>resumeFrom</name>
            <value>CreateEBIDataSet</value>
            <description>node to start</description>
        </property>
    </parameters>

    <start to="StartTransaction"/>

    <decision name="resume_from">
        <switch>
            <case to="DownloadEBILinks">${wf:conf('resumeFrom') eq 'DownloadEBILinks'}</case>
            <case to="StartTransaction">${wf:conf('resumeFrom') eq 'CreateEBIDataSet'}</case>
            <default to="DownloadEBILinks"/>
        </switch>
    </decision>


    <kill name="Kill">
        <message>Action failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>


    <action name="DownloadEBILinks">
        <spark xmlns="uri:oozie:spark-action:0.2">
            <master>yarn-cluster</master>
            <mode>cluster</mode>
            <name>Incremental Download EBI Links</name>
            <class>eu.dnetlib.dhp.sx.bio.ebi.SparkDownloadEBILinks</class>
            <jar>dhp-aggregation-${projectVersion}.jar</jar>
            <spark-opts>
                --executor-memory=${sparkExecutorMemory}
                --executor-cores=${sparkExecutorCores}
                --driver-memory=${sparkDriverMemory}
                --conf spark.extraListeners=${spark2ExtraListeners}
                --conf spark.sql.shuffle.partitions=2000
                --conf spark.sql.queryExecutionListeners=${spark2SqlQueryExecutionListeners}
                --conf spark.yarn.historyServer.address=${spark2YarnHistoryServerAddress}
                --conf spark.eventLog.dir=${nameNode}${spark2EventLogDir}
            </spark-opts>
            <arg>--sourcePath</arg><arg>${sourcePath}</arg>
            <arg>--workingPath</arg><arg>${workingPath}</arg>
            <arg>--master</arg><arg>yarn</arg>
        </spark>
        <ok to="OverrideFolders"/>
        <error to="Kill"/>
    </action>
    <action name="OverrideFolders">
        <fs>
            <delete path="${sourcePath}/ebi_links_dataset_old"/>
            <move source="${sourcePath}/ebi_links_dataset" target="${sourcePath}/ebi_links_dataset_old"/>
            <move source="${workingPath}/links_final" target="${sourcePath}/ebi_links_dataset"/>
        </fs>
        <ok to="StartTransaction"/>
        <error to="Kill"/>
    </action>

    <action name="StartTransaction">
        <java>
            <configuration>
                <property>
                    <name>oozie.launcher.mapreduce.user.classpath.first</name>
                    <value>true</value>
                </property>
            </configuration>
            <main-class>eu.dnetlib.dhp.aggregation.mdstore.MDStoreActionNode</main-class>
            <arg>--action</arg><arg>NEW_VERSION</arg>
            <arg>--mdStoreID</arg><arg>${mdStoreOutputId}</arg>
            <arg>--mdStoreManagerURI</arg><arg>${mdStoreManagerURI}</arg>
            <capture-output/>
        </java>
        <ok to="CreateEBIDataSet"/>
        <error to="RollBack"/>
    </action>


    <action name="CreateEBIDataSet">
        <spark xmlns="uri:oozie:spark-action:0.2">
            <master>yarn-cluster</master>
            <mode>cluster</mode>
            <name>Create OAF DataSet</name>
            <class>eu.dnetlib.dhp.sx.bio.ebi.SparkEBILinksToOaf</class>
            <jar>dhp-aggregation-${projectVersion}.jar</jar>
            <spark-opts>
                --executor-memory=${sparkExecutorMemory}
                --executor-cores=${sparkExecutorCores}
                --driver-memory=${sparkDriverMemory}
                --conf spark.sql.shuffle.partitions=2000
                ${sparkExtraOPT}
            </spark-opts>
            <arg>--sourcePath</arg><arg>${sourcePath}/ebi_links_dataset</arg>
            <arg>--mdstoreOutputVersion</arg><arg>${wf:actionData('StartTransaction')['mdStoreVersion']}</arg>
            <arg>--master</arg><arg>yarn</arg>
        </spark>
        <ok to="End"/>
        <error to="Kill"/>
    </action>


    <action name="CommitVersion">
        <java>
            <configuration>
                <property>
                    <name>oozie.launcher.mapreduce.user.classpath.first</name>
                    <value>true</value>
                </property>
            </configuration>
            <main-class>eu.dnetlib.dhp.aggregation.mdstore.MDStoreActionNode</main-class>
            <arg>--action</arg><arg>COMMIT</arg>
            <arg>--namenode</arg><arg>${nameNode}</arg>
            <arg>--mdStoreVersion</arg><arg>${wf:actionData('StartTransaction')['mdStoreVersion']}</arg>
            <arg>--mdStoreManagerURI</arg><arg>${mdStoreManagerURI}</arg>
        </java>
        <ok to="End"/>
        <error to="Kill"/>
    </action>

    <action name="RollBack">
        <java>
            <configuration>
                <property>
                    <name>oozie.launcher.mapreduce.user.classpath.first</name>
                    <value>true</value>
                </property>
            </configuration>
            <main-class>eu.dnetlib.dhp.aggregation.mdstore.MDStoreActionNode</main-class>
            <arg>--action</arg><arg>ROLLBACK</arg>
            <arg>--mdStoreVersion</arg><arg>${wf:actionData('StartTransaction')['mdStoreVersion']}</arg>
            <arg>--mdStoreManagerURI</arg><arg>${mdStoreManagerURI}</arg>
        </java>
        <ok to="Kill"/>
        <error to="Kill"/>
    </action>

    <end name="End"/>

</workflow-app>